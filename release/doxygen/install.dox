/**
\page page_Install Installing MLCPlusPlus

\section sec_Installation Installation

### Get Casablanca

Follow the build instructions for your platform, ensuring that the 'mlcplusplus' git directory is at the same level
as the 'casablanca' git directory.

These instructions are listed here: https://github.com/Microsoft/cpprestsdk/wiki

*WARNING*: If you receive an error about a 'redundant std::move' when compiling the above API, then rm -rf build.debug
and checkout the development branch of casablanca (i.e. git checkout development within the casablanca folder). This
is a known bug in the latest casablanca minor release.

Now in the casablanca folder issue `sudo make install`

Once built, continue below.

### Building the MLCPlusPlus library from source

Ensure first that all build scripts are executable:-
- chmod u+x \*.sh

To build the MLCPlusPlus library for your platform, execute the appropriate shell script, and use the build tool
for your platform. E.g.:-

- For cross platform (*RECOMMENDED*) Eclipse CDT, type './gen-eclipse.sh' and hit enter. Then open Eclipse and go to File, Import Existing Project, and point to the MLCPlusPlus project folder. This will discover the Eclipse project under ./bin .
- On a Mac, type './gen-mac.sh' and hit enter. This generates an XCode project you can use to build the library
- On Linux, type './gen-kdevelop.sh' and hit enter. This generates a KDevelop project you can use to build the library
- On other \*nix, type './gen-unix.sh' and hit enter Then type 'make' and hit enter. Optionally run 'sudo make install'
to install the library on your system
- On Windows, TODO - Coming Soon for Visual Studio

(Note: In future, if you want to remove all built files, execute './clean.sh' and hit enter )


\sec sec_Using Using MLCPlus Plus in your own project

### Using the MLCPlusPlus library in your C++ application

Start with the Connection class. This provides a connect function and callbacks for all MarkLogic REST API functions.

This class also abstracts the underlying security mechanism used to authenticate to the server.

Simply create a Connection class, call configure to set up the connection parameters, then call a function!

The API documentation can be found here: http://adamfowleruk.github.io/mlcplusplus/api/index.html

### Compiling the tests

These are built by the above build process. A lot of the tests have hardcoded values like usernames, hostnames, and
passwords that mean they can't immediately be executed on your own system. They should provide a good set of code to
work on your own projects though.
*/
